{"version":3,"sources":["Tmdb.js","components/MovieRow/index.js","components/FeaturedMovie/index.js","components/Header/index.js","App.js","index.js"],"names":["API_KEY","basicFetch","endpoint","a","fetch","req","json","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","style","fontSize","listW","results","length","marginLeft","width","map","item","key","src","poster_path","alt","original_title","firstDate","Date","first_air_date","genres","i","push","name","description","overview","substring","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","href","id","join","black","movieList","setMovieList","featuredData","setFeaturesData","blackHeader","setBlackHeader","useEffect","Tmdb","list","originals","filter","randonChosen","floor","random","chosen","chosenInfo","loadAll","scrollListener","scrollY","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8238061e.chunk.js","sourcesContent":["const API_KEY = 'e5d3cec78e28a99146c18e24956cd3c4'\r\nconst API_BASE = 'https://api.themoviedb.org/3'\r\n\r\nconst basicFetch = async (endpoint) => {\r\n    const req = await fetch(`${API_BASE}${endpoint}`)\r\n    const json = await req.json()\r\n    return json\r\n}\r\n\r\nexport default {\r\n    getHomeList: async () =>{\r\n        return [\r\n            {\r\n                slug: 'originals',\r\n                title: 'Originais da Netflix',\r\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados para Você',\r\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'toprated',\r\n                title: 'Em Alta',\r\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title: 'Ação',\r\n                items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title: 'Comédia',\r\n                items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'documentary',\r\n                title: 'Documentários',\r\n                items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n        ]\r\n    },\r\n\r\n    getMovieInfo: async (movieId,type) => {\r\n        let info = {}\r\n\r\n        if (movieId){\r\n            switch(type){\r\n                case 'movie':\r\n                    info = await basicFetch(`/movie/${movieId}?languade=pt-BR&api_key=${API_KEY}`)\r\n                break\r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?languade=pt-BR&api_key=${API_KEY}`)\r\n                break\r\n                default:\r\n                    info = null\r\n                break\r\n            }\r\n        }\r\n\r\n        return info\r\n    }\r\n}","import React, {useState} from 'react'\r\nimport './MovieRow.css'\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nexport default ({title, items}) => {\r\n\r\n    const [scrollX, setScrollX] = useState(0)\r\n\r\n    const handleLeftArrow = () => {\r\n        let x = scrollX + Math.round(window.innerWidth/2)\r\n        if(x > 0){\r\n            x=0\r\n        }\r\n\r\n        setScrollX(x);\r\n    }\r\n    const handleRightArrow = () => {\r\n        let x = scrollX - Math.round(window.innerWidth/2)\r\n\r\n        let listW = items.results.length * 150\r\n        if((window.innerWidth - listW) > x){\r\n            x = (window.innerWidth - listW) - 60\r\n        }\r\n        setScrollX(x)\r\n    }\r\n    return(\r\n        <div className=\"movieRow\">\r\n            <h2>{title}</h2>\r\n\r\n            <div className=\"movieRow--left\" onClick={handleLeftArrow}>\r\n                <NavigateBeforeIcon style={{fontSize: 50}}/>\r\n            </div>\r\n            <div className=\"movieRow--right\" onClick={handleRightArrow}>\r\n                <NavigateNextIcon style={{fontSize: 50}}/>\r\n            </div>\r\n\r\n            <div className=\"movieRow--listarea\">\r\n                <div className=\"movieRow--list\" style={{\r\n                    marginLeft: scrollX,\r\n                    width: items.results.length * 150\r\n                    }}>\r\n                    {items.results.length > 0 && items.results.map((item, key)=>(\r\n                        <div className=\"movieRow--item\">\r\n                            <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title}></img>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div> \r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './FeaturedMovie.css'\r\n\r\nexport default ({item}) => {\r\n\r\n    let firstDate = new Date(item.first_air_date)\r\n    let genres = []\r\n    for(let i in item.genres){\r\n        genres.push(item.genres[i].name)\r\n    }\r\n\r\n    let description = item.overview\r\n\r\n    if (description.length > 200){\r\n        description = description.substring(0, 300)+'...'\r\n    }\r\n\r\n    return (\r\n        <section className=\"featured\" style={{\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n        }}>\r\n            <div className=\"featured--vertical\">\r\n                <div className=\"featured--horizontal\">\r\n                    <div className=\"featured--name\">{item.original_name}</div>\r\n                    <div className=\"featured--info\">\r\n                        <div className=\"featured--points\">{item.vote_average} pontos</div>\r\n                        <div className=\"featured--year\">{firstDate.getFullYear()}</div>\r\n                        <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\r\n                        <div className=\"featured--description\">{description}</div>\r\n                        <div className=\"featured--buttons\">\r\n                            <a href={`/watch/${item.id}`} className=\"featured--watchbutton\">▶ Assistir</a>\r\n                            <a href={`/list/add/${item.id}`}className=\"featured--mylistbutton\">+ Minha Lista</a>\r\n                        </div>\r\n                        <div className=\"featured--genres\"><strong>Gêneros:</strong> {genres.join(', ')}</div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React from 'react'\r\nimport './Header.css'\r\n\r\nexport default ({black}) => {\r\n    return (\r\n        <header className={black ? 'black' : ''}>\r\n            <div className=\"header--logo\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" alt=\"Netflix\"></img>\r\n                </a>\r\n            </div>\r\n            <div className=\"header--user\">\r\n            <a href=\"/\">\r\n                <img src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\" alt=\"Usuário\"></img>\r\n                </a>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\nimport Tmdb from './Tmdb'\nimport MovieRow from './components/MovieRow'\nimport FeaturedMovie from './components/FeaturedMovie'\nimport Header from './components/Header'\nimport './App.css'\n\nexport default () => {\n\n  const [movieList, setMovieList] = useState([])\n  const [featuredData, setFeaturesData] = useState(null)\n  const [blackHeader, setBlackHeader] = useState(false)\n\n  useEffect(()=> {\n    const loadAll = async () => {\n      //Pegando a lista total\n      let list = await Tmdb.getHomeList()\n      setMovieList(list);\n\n      //Pegando o Featured\n      let originals = list.filter(i=> i.slug === 'originals')\n      let randonChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1))\n      let chosen = originals[0].items.results[randonChosen]\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv')\n      setFeaturesData(chosenInfo)\n\n    }\n\n    loadAll()\n  }, [])\n\n  useEffect(() => {\n    const scrollListener = () => {\n      if (window.scrollY > 20){\n        setBlackHeader(true)\n      }\n      else{\n        setBlackHeader(false)\n      }\n    }\n    window.addEventListener('scroll', scrollListener)\n\n    return() =>{\n      window.removeEventListener('scroll', scrollListener)\n    }\n\n  }, [])\n  return(\n    <div className=\"page\">\n\n      <Header black={blackHeader}/>\n\n      {featuredData &&\n        <FeaturedMovie item ={featuredData}/>\n      }\n      <section className=\"lists\" >\n        {movieList.map((item,key)=>(\n          <MovieRow key={key} title={item.title} items={item.items}/>\n        ))}\n      </section>\n\n      <footer>Projeto realizado para fins educacionais<br/>\n      Todos os direitos reservados para NETFLIX<br/>\n      Dados do site Themoviedb.org\n      </footer>\n\n      {movieList.length <= 0 &&\n      <div className=\"loading\" >\n        <img src=\"https://media.filmelier.com/noticias/br/2020/03/Netflix_LoadTime.gif\" alt=\"Carregando\"></img>\n      </div>\n      }\n    </div>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}